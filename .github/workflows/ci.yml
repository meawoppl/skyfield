name: Rust CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  PYTHON_VERSION: "3.10.8"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "starfield-build-cache"
      
      - name: Check formatting
        run: cargo fmt -- --check
        
      - name: Run clippy
        run: cargo clippy -- -D warnings
      
      - name: Run tests (excluding Python comparison tests)
        run: cargo test -- --skip python_comparison
        
  python-comparison:
    name: Python Comparison Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install skyfield pytest
          python -c "import skyfield; print(f'Skyfield version: {skyfield.__version__}')"
      
      - name: Verify Skyfield installation
        run: |
          chmod +x test_skyfield.py
          python test_skyfield.py
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "starfield-build-cache"
      
      - name: Run Python comparison tests
        run: cargo test python_comparison
        env:
          PYTHONPATH: ${{ github.workspace }}
        
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "starfield-build-cache"
      
      - name: Build
        run: cargo build --release
        
      - name: Run examples
        run: |
          for example in $(cargo run --example 2>&1 | grep -oP '(?<=Available examples:).*' | tr -d ' ' | tr ',' '\n'); do
            echo "Running example: $example"
            cargo run --example $example || echo "Example $example failed but continuing..."
          done